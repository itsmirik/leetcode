class Solution:    def getFinalState(self, nums: list[int], k: int, multiplier: int) -> list[int]:        for _ in range(0, k):            min_num = min(nums)            index = nums.index(min_num)            nums[index] = min_num * multiplier        return nums'''nums = [2, 1, 3, 5, 6]k = 5m = 21. [2, 1 * 2, 3, 5, 6] => [2, 2, 3, 5, 6]2. [2 * 2, 2, 3, 5, 6] => [4, 2, 3, 5, 6]3. [4, 2 * 2, 3, 5, 6] => [4, 4, 3, 5, 6]4. [4, 4, 3 * 2, 5, 6] => [4, 4, 6, 5, 6]5. [4 * 2, 4, 6, 5, 6] => [8, 4, 6, 5, 6]'''if __name__ == '__main__':    print(Solution().getFinalState([2, 1, 3, 5, 6], 5, 2))    print(Solution().getFinalState([1, 2], 3, 4))